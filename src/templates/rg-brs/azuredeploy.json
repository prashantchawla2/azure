{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "prefix": {
      "type": "string"
    },
    "environment": {
      "type": "string"
    },
    "system": {
      "type": "string"
    },
    "objectId": {
      "type": "string"
    },
    "groupKeyVaultSku": {
      "type": "string",
      "defaultValue": "Standard"
    },
    "appServicePlanSize": {
      "type": "string",
      "allowedValues": [
        "Small",
        "Medium"
      ]
    },
    "TelemetryEventHubReadPolicyName": {
      "type": "string"
    },
    "TelemetryEventHubReadPolicyKey": {
      "type": "securestring"
    },
    "TelemetryEventHubNamespace": {
      "type": "string"
    },
    "TelemetryEventHubName": {
      "type": "string"
    },
    "mgmtApiUrl": {
      "type": "string",
      "defaultValue": ""
    },
    "TaskManagementSystemApiUrl": {
      "type": "string",
      "defaultValue": ""
    },
    "constKeyVault": {
      "type": "string"
    },
    "apiCorsAllowedOrigins": {
      "type": "array",
      "defaultValue": [
      ]
    },
    "proasDesignInsightsDataExplorerSettings": {
      "type": "object",
      "defaultValue": {
        "api": {
          "url": "",
          "modelResultsApiKey": "",
          "telemetryApiKey": ""
        }
      }
    },
    "principalIdsForKeyVaultAccess": {
      "type": "array",
      "defaultValue": [
      ]
    }
  },
  "variables": {
    "nameConfig": {
      "prefix": "[parameters('prefix')]",
      "environment": "[parameters('environment')]",
      "system": "[parameters('system')]",
      "app": ""
    },
    "businessRuleSystemStorageAccountConnectionSecretName": "businessRuleSystemStorageAccountConnectionString",
    "businessRuleSystemStorageAccountKeySecretName": "businessRuleSystemStorageAccountKey"
  },
  "functions": [
    {
      "namespace": "marelconnect",
      "members": {
        "templateLink": {
          "parameters": [
            {
              "name": "relativePath",
              "type": "string"
            }
          ],
          "output": {
            "type": "string",
            "value": "[uri(replace(deployment().properties.templateLink.uri, 'rg-brs/azuredeploy.json', ''), parameters('relativePath'))]"
          }
        }
      }
    }
  ],
  "resources": [
    {
      "apiVersion": "2017-05-10",
      "name": "Key-Vault",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[marelconnect.templateLink('library/keyVault/mc-key-vault.template.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "nameConfig": {
            "value": "[variables('nameConfig')]"
          },
          "objectId": {
            "value": "[parameters('objectId')]"
          },
          "keyVaultSkuName": {
            "value": "[parameters('groupKeyVaultSku')]"
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "BRBlobConnectionStringSecret",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[marelconnect.templateLink('library/keyVault/key-vault-secret.template.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "keyVaultName": {
            "value": "[reference('Key-Vault').outputs.name.value]"
          },
          "name": {
            "value": "BRBlobConnectionString"
          },
          "value": {
            "reference": {
              "keyVault": {
                "id": "[reference('Key-Vault').outputs.id.value]"
              },
              "secretName": "[variables('businessRuleSystemStorageAccountConnectionSecretName')]"
            }
          }
        }
      },
      "dependsOn": [
        "Business-Rule-System-Storage-Account"
      ]
    },
    {
      "apiVersion": "2017-05-10",
      "name": "Business-Rule-System-Db",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[marelconnect.templateLink('library/mongoCosmosDb/mc-mongo-cosmos-db.template.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "nameConfig": {
            "value": "[variables('nameConfig')]"
          },
          "keyVaultName": {
            "value": "[reference('Key-Vault').outputs.name.value]"
          }
        }
      }
    },
    {
      "apiVersion": "2019-10-01",
      "name": "ActionTriggerServiceBus",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[marelconnect.templateLink('library/serviceBus/mc-servicebus.template.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "nameConfig": {
            "value": "[variables('nameConfig')]"
          },
          "keyVaultName": {
            "value": "[reference('Key-Vault').outputs.name.value]"
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "App-Service-Plan",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[marelconnect.templateLink('library/appServicePlan/mc-app-service-plan.template.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "nameConfig": {
            "value": "[variables('nameConfig')]"
          },
          "location": {
            "value": "[resourcegroup().location]"
          },
          "size": {
            "value": "[parameters('appServicePlanSize')]"
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "BusinessRuleAPI",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[marelconnect.templateLink('library/webSites/mc-web-app.template.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "nameConfig": {
            "value": {
              "prefix": "[parameters('prefix')]",
              "environment": "[parameters('environment')]",
              "system": "[parameters('system')]",
              "app": "br"
            }
          },
          "tags": {
            "value": {
              "App": "Business Rule System API"

            }
          },
          "serverFarmId": {
            "value": "[reference('App-Service-Plan').outputs.id.value]"
          },
          "location": {
            "value": "[resourcegroup().location]"
          },
          "developmentMode": {
            "value": false
          },
          "api": {
            "value": true
          },
          "applicationInsightsName": {
            "value": "[reference('BRS-Application-Insights').outputs.name.value]"
          },
          "corsAllowedOrigins": {
            "value": "[parameters('apiCorsAllowedOrigins')]"
          },
          "connectionStrings": {
            "value": [
            ]
          },
          "appSettings": {
            "value": [
              {
                "name": "constKeyVault",
                "value": "[parameters('constKeyVault')]"
              },
              {
                "name": "keyVault",
                "value": "[reference('Key-Vault').outputs.name.value]"
              },
              {
                "name": "ConnectionString",
                "value": "[concat('@Microsoft.KeyVault(SecretUri=', reference('Business-Rule-System-Db').outputs.connectionStringSecretUri.value, ')')]"
              },
              {
                "name": "StreamAnalyticsStorageConnectionString",
                "value": "[concat('@Microsoft.KeyVault(SecretUri=', reference('Business-Rule-System-Storage-Account').outputs.connectionStringSecretUri.value, ')')]"
              },
              {
                "name": "StreamAnalyticsStorageContainerName",
                "value": "business-rule-sets"
              },
              {
                "name": "StreamAnalyticsStorageBlobName",
                "value": "{date}/{time}/rules.json"
              }
            ]
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "Business-Rule-System-Storage-Account",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[marelconnect.templateLink('library/storageAccount/mc-storage-account.template.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "nameConfig": {
            "value": "[variables('nameConfig')]"
          },
          "accountType": {
            "value": "Standard_RAGRS"
          },
          "kind": {
            "value": "Storage"
          },
          "httpsTrafficOnlyEnabled": {
            "value": true
          },
          "keyVaultName": {
            "value": "[reference('Key-Vault').outputs.name.value]"
          },
          "accessTier": {
            "value": "Cool"
          },
          "storageAccountConnectionStringSecretName": {
            "value": "[variables('businessRuleSystemStorageAccountConnectionSecretName')]"
          },
          "storageAccountConnectionKeySecretName": {
            "value": "[variables('businessRuleSystemStorageAccountKeySecretName')]"
          },
          "containers": {
            "value": [
              "business-rule-sets",
              "business-rule-sets-old"
            ]
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "BusinessRuleProcessor-ASA",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[marelconnect.templateLink('library/streamAnalytics/mc-stream-analytics.template.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "nameConfig": {
            "value": "[variables('nameConfig')]"
          },
          "jobTemplatePath": {
            "value": "rg-brs/businessRuleProcessorASA.template.json"
          },
          "jobParameters": {
            "value": {
              "ASAApiVersion": {
                "value": "2017-04-01-preview"
              },
              "Location": {
                "value": "[resourcegroup().location]"
              },
              "OutputStartMode": {
                "value": "JobStartTime"
              },
              "OutputStartTime": {
                "value": "2019-01-01T00:00:00Z"
              },
              "DataLocale": {
                "value": "en-US"
              },
              "OutputErrorPolicy": {
                "value": "Drop"
              },
              "EventsLateArrivalMaxDelayInSeconds": {
                "value": 5
              },
              "EventsOutOfOrderMaxDelayInSeconds": {
                "value": 5
              },
              "EventsOutOfOrderPolicy": {
                "value": "Drop"
              },
              "StreamingUnits": {
                "value": 3
              },
              "CompatibilityLevel": {
                "value": "1.2"
              },
              "Input_RuleSet_Storage1_accountName": {
                "value": "[reference('Business-Rule-System-Storage-Account').outputs.storageName.value]"
              },
              "Input_RuleSet_Storage1_accountKey": {
                "reference": {
                  "keyVault": {
                    "id": "[resourceId('Microsoft.KeyVault/vaults', reference('Key-Vault').outputs.name.value)]"
                  },
                  "secretName": "[variables('businessRuleSystemStorageAccountKeySecretName')]"
                }
              },
              "Input_RuleSet_container": {
                "value": "business-rule-sets"
              },
              "Input_RuleSet_pathPattern": {
                "value": "{date}/{time}/rules.json"
              },
              "Input_RuleSet_dateFormat": {
                "value": "yyyy-MM-dd"
              },
              "Input_RuleSet_timeFormat": {
                "value": "HH-mm"
              },
              "Input_TelemetryStream_serviceBusNamespace": {
                "value": "[parameters('TelemetryEventHubNamespace')]"
              },
              "Input_TelemetryStream_eventHubName": {
                "value": "[parameters('TelemetryEventHubName')]"
              },
              "Input_TelemetryStream_consumerGroupName": {
                "value": "business-rule-processor-asa"
              },
              "Input_TelemetryStream_sharedAccessPolicyName": {
                "value": "[parameters('TelemetryEventHubReadPolicyName')]"
              },
              "Input_TelemetryStream_sharedAccessPolicyKey": {
                "value": "[parameters('TelemetryEventHubReadPolicyKey')]"
              },
              "Output_ActionTriggers_serviceBusNamespace": {
                "value": "[reference('ActionTriggerServiceBus').outputs.serviceBusNamespace.value]"
              },
              "Output_ActionTriggers_queueName": {
                "value": "[reference('ActionTriggerServiceBus').outputs.queueName.value]"
              },
              "Output_ActionTriggers_sharedAccessPolicyName": {
                "value": "[reference('ActionTriggerServiceBus').outputs.serviceBusSecrets.value.accessPolicyName]"
              },
              "Output_ActionTriggers_sharedAccessPolicyKey": {
                "reference": {
                  "keyVault": {
                    "id": "[resourceId('Microsoft.KeyVault/vaults', reference('Key-Vault').outputs.name.value)]"
                  },
                  "secretName": "[reference('ActionTriggerServiceBus').outputs.serviceBusSecrets.value.primaryKeySecretName]"
                }
              }
            }
          }
        }
      },
      "dependsOn": [
      ]
    },
    {
      "apiVersion": "2017-05-10",
      "name": "BusinessRuleProcessorOld-ASA",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[marelconnect.templateLink('library/streamAnalytics/mc-stream-analytics.template.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "nameConfig": {
            "value": {
              "prefix": "[variables('nameConfig').prefix]",
              "environment": "[variables('nameConfig').environment]",
              "system": "[concat(variables('nameConfig').system, 'old')]"
            }
          },
          "jobTemplatePath": {
            "value": "rg-brs/businessRuleProcessorOldASA.template.json"
          },
          "jobParameters": {
            "value": {
              "ASAApiVersion": {
                "value": "2017-04-01-preview"
              },
              "Location": {
                "value": "[resourcegroup().location]"
              },
              "OutputStartMode": {
                "value": "JobStartTime"
              },
              "OutputStartTime": {
                "value": "2019-01-01T00:00:00Z"
              },
              "DataLocale": {
                "value": "en-US"
              },
              "OutputErrorPolicy": {
                "value": "Drop"
              },
              "EventsLateArrivalMaxDelayInSeconds": {
                "value": 5
              },
              "EventsOutOfOrderMaxDelayInSeconds": {
                "value": 5
              },
              "EventsOutOfOrderPolicy": {
                "value": "Drop"
              },
              "StreamingUnits": {
                "value": 3
              },
              "CompatibilityLevel": {
                "value": "1.2"
              },
              "Input_RuleSet_Storage1_accountName": {
                "value": "[reference('Business-Rule-System-Storage-Account').outputs.storageName.value]"
              },
              "Input_RuleSet_Storage1_accountKey": {
                "reference": {
                  "keyVault": {
                    "id": "[resourceId('Microsoft.KeyVault/vaults', reference('Key-Vault').outputs.name.value)]"
                  },
                  "secretName": "[variables('businessRuleSystemStorageAccountKeySecretName')]"
                }
              },
              "Input_RuleSet_container": {
                "value": "business-rule-sets-old"
              },
              "Input_RuleSet_pathPattern": {
                "value": "{date}/{time}/rules.json"
              },
              "Input_RuleSet_dateFormat": {
                "value": "yyyy-MM-dd"
              },
              "Input_RuleSet_timeFormat": {
                "value": "HH-mm"
              },
              "Input_TelemetryStream_serviceBusNamespace": {
                "value": "[parameters('TelemetryEventHubNamespace')]"
              },
              "Input_TelemetryStream_eventHubName": {
                "value": "[parameters('TelemetryEventHubName')]"
              },
              "Input_TelemetryStream_consumerGroupName": {
                "value": "business-rule-processor-asa-old"
              },
              "Input_TelemetryStream_sharedAccessPolicyName": {
                "value": "[parameters('TelemetryEventHubReadPolicyName')]"
              },
              "Input_TelemetryStream_sharedAccessPolicyKey": {
                "value": "[parameters('TelemetryEventHubReadPolicyKey')]"
              },
              "Output_ActionTriggers_serviceBusNamespace": {
                "value": "[reference('ActionTriggerServiceBus').outputs.serviceBusNamespace.value]"
              },
              "Output_ActionTriggers_queueName": {
                "value": "[reference('ActionTriggerServiceBus').outputs.queueName.value]"
              },
              "Output_ActionTriggers_sharedAccessPolicyName": {
                "value": "[reference('ActionTriggerServiceBus').outputs.serviceBusSecrets.value.accessPolicyName]"
              },
              "Output_ActionTriggers_sharedAccessPolicyKey": {
                "reference": {
                  "keyVault": {
                    "id": "[resourceId('Microsoft.KeyVault/vaults', reference('Key-Vault').outputs.name.value)]"
                  },
                  "secretName": "[reference('ActionTriggerServiceBus').outputs.serviceBusSecrets.value.primaryKeySecretName]"
                }
              }
            }
          }
        }
      },
      "dependsOn": [
      ]
    },
    {
      "apiVersion": "2019-10-01",
      "name": "ActionTriggerProcessor",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[marelconnect.templateLink('library/functionApps/mc-function-app.template.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "nameConfig": {
            "value": {
              "prefix": "[parameters('prefix')]",
              "environment": "[parameters('environment')]",
              "system": "[parameters('system')]",
              "app": "atp"
            }
          },
          "tags": {
            "value": {
              "App": "Action Trigger Processor"

            }
          },
          "functionsVersion": {
            "value": "~3"
          },
          "applicationInsightsName": {
            "value": "[reference('BRS-Application-Insights').outputs.name.value]"
          },
          "appSettings": {
            "value": [
              {
                "name": "keyVault",
                "value": "[reference('Key-Vault').outputs.name.value]"
              },
              {
                "name": "AzureServiceBusConnectionString",
                "value": "[concat('@Microsoft.KeyVault(SecretUri=', reference('ActionTriggerServiceBus').outputs.serviceBusSecrets.value.connectionStringSecretUri, ')')]"
              },
              {
                "name": "AzureServiceBusQueue",
                "value": "[reference('ActionTriggerServiceBus').outputs.queueName.value]"
              },
              {
                "name": "BusinessRules:Endpoint",
                "value": "[reference('BusinessRuleAPI').outputs.url.value]"
              },
              {
                "name": "BusinessRules:Path",
                "value": "api/business-rules"
              },
              {
                "name": "TaskLifecycleManagement:Endpoint",
                "value": "[parameters('TaskManagementSystemApiUrl')]"
              },
              {
                "name": "TaskLifecycleManagement:Path",
                "value": "api/v1/tasks"
              }
            ]
          }
        }
      },
      "dependsOn": [
        "App-Service-Plan"
      ]
    },
    {
      "apiVersion": "2017-05-10",
      "name": "ActionTriggerScheduler",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[marelconnect.templateLink('library/functionApps/mc-function-app.template.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "nameConfig": {
            "value": {
              "prefix": "[parameters('prefix')]",
              "environment": "[parameters('environment')]",
              "system": "[parameters('system')]",
              "app": "atsch"
            }
          },
          "tags": {
            "value": {
              "App": "Action Trigger Scheduler"

            }
          },
          "applicationInsightsName": {
            "value": "[reference('BRS-Application-Insights').outputs.name.value]"
          },
          "appSettings": {
            "value": [
              {
                "name": "ActionTriggerQueueName",
                "value": "[reference('ActionTriggerServiceBus').outputs.queueName.value]"
              },
              {
                "name": "ActionTriggerServiceBusConnectionString",
                "value": "[concat('@Microsoft.KeyVault(SecretUri=', reference('ActionTriggerServiceBus').outputs.serviceBusSecrets.value.connectionStringSecretUri, ')')]"
              },
              {
                "name": "ManagementApiUrl",
                "value": "[parameters('mgmtApiUrl')]"
              }
            ]
          }
        }
      },
      "dependsOn": [
        "App-Service-Plan",
        "ActionTriggerProcessor"
      ]
    },
    {
      "apiVersion": "2017-05-10",
      "name": "CollectionPrefix-Secret",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[marelconnect.templateLink('library/keyVault/key-vault-secret.template.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "keyVaultName": {
            "value": "[reference('Key-Vault').outputs.name.value]"
          },
          "name": {
            "value": "cosmosCollectionPrefix"
          },
          "value": {
            "value": "[concat(parameters('prefix'), '_')]"
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "Key-Vault-Access-Policy-Deployment",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[marelconnect.templateLink('library/keyVault/key-vault-sequenital-access-deploy.template.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "keyVaultName": {
            "value": "[reference('Key-Vault').outputs.name.value]"
          },
          "principalIds": {
            "value": [
              "[reference('ActionTriggerProcessor').outputs.objectId.value]",
              "[reference('ActionTriggerScheduler').outputs.objectId.value]",
              "[reference('BusinessRuleAPI').outputs.objectId.value]"
            ]
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "External-Key-Vault-Access-Policy-Deployment",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[marelconnect.templateLink('library/keyVault/key-vault-sequenital-access-deploy.template.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "keyVaultName": {
            "value": "[reference('Key-Vault').outputs.name.value]"
          },
          "principalIds": {
            "value": "[parameters('principalIdsForKeyVaultAccess')]"
          }
        }
      },
      "dependsOn": [
        "Key-Vault-Access-Policy-Deployment"
      ]
    },
    {
      "apiVersion": "2017-05-10",
      "name": "BRS-Application-Insights",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[marelconnect.templateLink('library/applicationInsights/mc-application-insights-component.template.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "nameConfig": {
            "value": "[variables('nameConfig')]"
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "BRS-Application-Insights-Key-Secret",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[marelconnect.templateLink('library/keyVault/key-vault-secret.template.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "keyVaultName": {
            "value": "[reference('Key-Vault').outputs.name.value]"
          },
          "name": {
            "value": "BRSApplicationInsightsInstrumentationKey"
          },
          "value": {
            "value": "[reference('BRS-Application-Insights').outputs.instrumentationKey.value]"
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "BRS-Application-Insights-AppId-Secret",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[marelconnect.templateLink('library/keyVault/key-vault-secret.template.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "keyVaultName": {
            "value": "[reference('Key-Vault').outputs.name.value]"
          },
          "name": {
            "value": "BRSApplicationInsightsAppId"
          },
          "value": {
            "value": "[reference('BRS-Application-Insights').outputs.appId.value]"
          }
        }
      }
    }
  ],
  "outputs": {
    "keyVault": {
      "type": "string",
      "value": "[reference('Key-Vault').outputs.name.value]"
    },
    "constKeyVaultAccessors": {
      "type": "array",
      "value": [
      ]
    }
  }
}
